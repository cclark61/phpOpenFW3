<?php
//******************************************************************************
//******************************************************************************
/**
 * Database Record Class
 *
 * @package         phpOpenFW
 * @author          Christian J. Clark
 * @copyright       Copyright (c) Christian J. Clark
 * @website         https://phpopenfw.org
 * @license         https://mit-license.org
 */
//******************************************************************************
//******************************************************************************

namespace phpOpenFW\Database\Relational;

use \phpOpenFW\Builders\SQL;

abstract class Record
{
    //==========================================================================
    // Traits
    //==========================================================================
    use \phpOpenFW\Traits\ErrorHandling;

    //==========================================================================
    // Class Members
    //==========================================================================
    protected $args = [];
    protected $data_source = false;
    protected $table = false;
    protected $select_view = false;
    protected $data = [];
    protected $debug = false;
    protected $is_valid = null;
    protected $status = null;
    protected $id_field = 'id';
    protected $record_id = false;
    protected $wheres = false;
    protected $no_update_fields = ['id'];

    //==========================================================================
    //==========================================================================
    // Constructor
    //==========================================================================
    //==========================================================================
    public function __construct($wheres, Array $args=[], $data_source=false)
    {
        //----------------------------------------------------------------------
        // Setup
        //----------------------------------------------------------------------
        $this->Setup($wheres, $args, $data_source);

        //----------------------------------------------------------------------
        // Load Record
        //----------------------------------------------------------------------
        $this->LoadRecord();
    }

    //==========================================================================
    //==========================================================================
    // Get an instance of this object
    //==========================================================================
    //==========================================================================
    public static function Instance($wheres, Array $args=[], $data_source=false)
    {
        return new static($wheres, $args, $data_source);
    }

    //==========================================================================
    //==========================================================================
    // Is the Instance Valid
    //==========================================================================
    //==========================================================================
    public function IsValid()
    {
        return $this->is_valid;
    }

    //==========================================================================
    //==========================================================================
    // Get Status
    //==========================================================================
    //==========================================================================
    public function Status()
    {
        return $this->status;
    }

    //==========================================================================
    //==========================================================================
    // Check if Instance is Valid
    //==========================================================================
    //==========================================================================
    public function CheckIsValid($file, $line, $error_msg='')
    {
        if ($error_msg == '') {
            $error_msg = 'Invalid record instance.';
        }
        if (!$this->is_valid) {
            $this->Error($error_msg, $file, $line);
            return false;
        }
        return true;
    }

    //==========================================================================
    //==========================================================================
    // Get Data
    //==========================================================================
    //==========================================================================
    public function GetData()
    {
        //----------------------------------------------------------------------
        // Is Object Valid?
        //----------------------------------------------------------------------
        if (!$this->is_valid) {
            $error = 'This object is not valid. there is not data available.';
            $this->Error($error, __FILE__, __LINE__);
            return false;
        }

        return $this->data;
    }

    //==========================================================================
    //==========================================================================
    // Refresh Data
    //==========================================================================
    //==========================================================================
    protected function Refresh()
    {
        //----------------------------------------------------------------------
        // Is Object Valid?
        //----------------------------------------------------------------------
        if (!$this->is_valid) {
            $error = 'This object is not valid. Cannot refresh data.';
            $this->Error($error, __FILE__, __LINE__);
            return false;
        }

        //----------------------------------------------------------------------
        // Refresh Data
        //----------------------------------------------------------------------
        return $this->LoadRecord();
    }

    //==========================================================================
    //==========================================================================
    // Update Record
    //==========================================================================
    //==========================================================================
    public function Update(Array $values, Array $args=[])
    {
        //----------------------------------------------------------------------
        // Extract Args
        //----------------------------------------------------------------------
        extract($args);

        //----------------------------------------------------------------------
        // Is Object Valid?
        //----------------------------------------------------------------------
        if (!$this->is_valid) {
            $error = 'This object is not valid. Cannot update record.';
            $this->Error($error, __FILE__, __LINE__);
            return false;
        }

        //----------------------------------------------------------------------
        // Is record ID set?
        //----------------------------------------------------------------------
        if (!$this->record_id) {
            $error = 'Record ID is not set. Cannot update record.';
            $this->Error($error, __FILE__, __LINE__);
            return false;
        }

        //----------------------------------------------------------------------
        // No Values, No Update.
        //----------------------------------------------------------------------
        if (!$values) {
            return false;
        }

        //----------------------------------------------------------------------
        // Get Table Structure
        //----------------------------------------------------------------------
        $table_fields = \phpOpenFW\Database\Structure\Table::Instance($this->data_source, $this->table)->GetStructure();

        //----------------------------------------------------------------------
        // No Fields, No Update.
        //----------------------------------------------------------------------
        if (!$table_fields) {
            return false;
        }

        //----------------------------------------------------------------------
        // No Update Fields
        //----------------------------------------------------------------------
        if (isset($args['no_update_fields'])) {
            $nufs = $this->NoUpdateFields($args['no_update_fields']);
        }
        else {
            $nufs = $this->no_update_fields;
        }

        //----------------------------------------------------------------------
        // Determine Values
        //----------------------------------------------------------------------
        $update_values = [];
        foreach ($table_fields as $field => $info) {
            if (array_key_exists($field, $values) && !in_array($field, $nufs)) {
                $update_values[$field] = $values[$field];
            }
        }

        //----------------------------------------------------------------------
        // No Update Values, No Update.
        //----------------------------------------------------------------------
        if (!$update_values) {
            return false;
        }

        //----------------------------------------------------------------------
        // Create Delete Query
        //----------------------------------------------------------------------
        $query = SQL::Update($this->table, $this->data_source)
        ->Values($update_values)
        ->Where($this->id_field, $this->record_id)
        ->Limit(1);

        //----------------------------------------------------------------------
        // Debug?
        //----------------------------------------------------------------------
        if (!empty($debug) || $this->debug) {
            print $query . "\n";
            print_r($query->GetBindParams());
            return false;
        }

        //----------------------------------------------------------------------
        // Execute Query
        //----------------------------------------------------------------------
        $update_status = $query->Execute();

        //----------------------------------------------------------------------
        // Refresh Object
        //----------------------------------------------------------------------
        $this->Refresh();

        //----------------------------------------------------------------------
        // Return Update Status
        //----------------------------------------------------------------------
        return $update_status;
    }

    //==========================================================================
    //==========================================================================
    // Update Record?
    //==========================================================================
    //==========================================================================
    public function Delete(Array $args=[])
    {
        //----------------------------------------------------------------------
        // Extract Args
        //----------------------------------------------------------------------
        extract($args);

        //----------------------------------------------------------------------
        // Is Object Valid
        //----------------------------------------------------------------------
        if (!$this->is_valid) {
            $error = 'This object is not valid. Cannot delete record.';
            $this->Error($error, __FILE__, __LINE__);
            return false;
        }

        //----------------------------------------------------------------------
        // Is record ID set?
        //----------------------------------------------------------------------
        if (!$this->record_id) {
            $error = 'Record ID is not set. Cannot delete record.';
            $this->Error($error, __FILE__, __LINE__);
            return false;
        }

        //----------------------------------------------------------------------
        // Create Delete Query
        //----------------------------------------------------------------------
        $query = SQL::Delete($this->table, $this->data_source)
        ->Where($this->id_field, $this->record_id)
        ->Limit(1);

        //----------------------------------------------------------------------
        // Debug?
        //----------------------------------------------------------------------
        if (!empty($debug) || $this->debug) {
            print $query . "\n";
            print_r($query->GetBindParams());
            return false;
        }

        //----------------------------------------------------------------------
        // Execute Query
        //----------------------------------------------------------------------
        $delete_status = $query->Execute();

        //----------------------------------------------------------------------
        // Reset Object
        //----------------------------------------------------------------------
        $this->Reset();
    }

    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    // Internal Methods
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
    //%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    //==========================================================================
    //==========================================================================
    // Setup
    //==========================================================================
    //==========================================================================
    public function Setup($wheres, Array $args, $data_source)
    {
        //----------------------------------------------------------------------
        // Check that class is configured correctly
        //----------------------------------------------------------------------
        if (!$this->table) {
            $this->is_valid = false;
            $this->Error('Setup failed: Database table is not set.', __FILE__, __LINE__);
            return false;
        }

        //----------------------------------------------------------------------
        // Set Object Args
        //----------------------------------------------------------------------
        $this->args = $args;

        //----------------------------------------------------------------------
        // Was an ID passed?
        //----------------------------------------------------------------------
        if (is_scalar($wheres) && is_numeric($wheres)) {
            $wheres = ['id' => $wheres];
        }

        //----------------------------------------------------------------------
        // Wheres must be an array
        //----------------------------------------------------------------------
        if (!is_array($wheres)) {
            $error = 'Setup failed: Invalid arguments passed for querying database record. Record ID or array of fields / values required.';
            $this->Error($error, __FILE__, __LINE__);
            return false;
        }
        $this->wheres = $wheres;

        //----------------------------------------------------------------------
        // Set Data Source
        //----------------------------------------------------------------------
        if ($data_source) {
            $this->data_source = $data_source;
        }
        else if (!empty($this->args['data_source'])) {
            $this->data_source = $this->args['data_source'];
        }
        //$this->ds_obj = \phpOpenFW\Core\DataSources::GetOneOrDefault($this->data_source);

        //----------------------------------------------------------------------
        // ID Field
        //----------------------------------------------------------------------
        if (!empty($this->args['id_field'])) {
            $this->id_field = $this->args['id_field'];
        }

        //----------------------------------------------------------------------
        // Debug
        //----------------------------------------------------------------------
        if (!empty($this->args['debug'])) {
            $this->debug = $this->args['debug'];
        }

        //----------------------------------------------------------------------
        // No Update Fields
        //----------------------------------------------------------------------
        if (isset($this->args['no_update_fields'])) {
            $this->no_update_fields = $this->NoUpdateFields($this->args['no_update_fields']);
        }
    }

    //==========================================================================
    //==========================================================================
    // No Update Fields
    //==========================================================================
    //==========================================================================
    protected function NoUpdateFields($in)
    {
        $out = $this->no_update_fields;
        if (is_array($in)) {
            $out = $in;
        }
        else if (!$in) {
            $out = [];
        }
        return $out;
    }

    //==========================================================================
    //==========================================================================
    // Determine Table
    //==========================================================================
    //==========================================================================
    protected function DetermineTable($method)
    {
        $method = strtolower($method);
        $tmp_table = $this->table;
        if ($method == 'loadrecord') {
            if ($this->select_view && is_string($this->select_view)) {
                return $this->select_view;
            }
        }
        return $tmp_table;
    }

    //==========================================================================
    //==========================================================================
    // Load Record
    //==========================================================================
    //==========================================================================
    protected function LoadRecord(Array $args=[])
    {
        //----------------------------------------------------------------------
        // Extract Args
        //----------------------------------------------------------------------
        extract($args);

        //----------------------------------------------------------------------
        // Determine Table or View
        //----------------------------------------------------------------------
        $tmp_table = $this->DetermineTable(__FUNCTION__);

        //----------------------------------------------------------------------
        // Start Query
        //----------------------------------------------------------------------
        $query = SQL::Select($tmp_table, $this->data_source)
        ->Select($tmp_table . '.*');

        //----------------------------------------------------------------------
        // Set where conditions from array
        //----------------------------------------------------------------------
        if (!empty($this->record_id) && !empty($this->id_field)) {
            $query->Where($this->id_field, $this->record_id);
        }
        else {
            foreach ($this->wheres as $key => $val) {
                $query->Where($key, $val);
            }
        }

        //----------------------------------------------------------------------
        // Debug?
        //----------------------------------------------------------------------
        if (!empty($debug) || $this->debug) {
            print $query . "\n";
            print_r($query->GetBindParams());
            return false;
        }

        //----------------------------------------------------------------------
        // Limit 2 / Execute
        //----------------------------------------------------------------------
        $query->Limit(2);
        $recs = $query->Execute();

        //----------------------------------------------------------------------
        // Validate Record
        //----------------------------------------------------------------------
        if ($recs) {
            $this->status = count($recs);
            if ($this->status == 1) {
                $this->is_valid = true;
                $this->data = current($recs);
                if (isset($this->data['id'])) {
                    $this->record_id = $this->data['id'];
                }
            }
            else {
                $this->is_valid = false;
            }
        }
        else {
            $this->status = 0;
            $this->is_valid = false;
        }

        return $this->is_valid;
    }

    //==========================================================================
    //==========================================================================
    // Destroy
    //==========================================================================
    //==========================================================================
    protected function Reset()
    {
        $this->args = [];
        $this->data_source = false;
        $this->table = false;
        $this->select_view = false;
        $this->data = [];
        $this->debug = false;
        $this->is_valid = null;
        $this->status = null;
        $this->id_field = 'id';
        $this->record_id = false;
        $this->wheres = false;
        $this->no_update_fields = [
            'id', 'create_person_id', 'create_dttm'
        ];
    }

}
