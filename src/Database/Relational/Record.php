<?php
//******************************************************************************
//******************************************************************************
/**
 * Database Record Class
 *
 * @package         phpOpenFW
 * @author          Christian J. Clark
 * @copyright       Copyright (c) Christian J. Clark
 * @license         https://mit-license.org
 */
//******************************************************************************
//******************************************************************************

namespace phpOpenFW\Database\Relational;

abstract class Record
{
    //=========================================================================
    // Class Members
    //=========================================================================
    protected static $dao = false;
    protected $data = [];
    protected $is_valid = null;
    protected $record_id = false;

    //=========================================================================
    //=========================================================================
    // Constructor
    //=========================================================================
    //=========================================================================
    public function __construct(Array $args=[])
    {
        if (!static::$dao) {
            $this->is_valid = false;
            return false;
        }
        $args['limit'] = 5;
        $data = static::$dao::Retrieve($args);
        if ($data && count($data) == 1) {
            $this->is_valid = true;
            $this->data = current($data);
            if (isset($this->data['id'])) {
                $this->record_id = $this->data['id'];
            }
        }
        else {
            $this->is_valid = false;
        }
    }

    //=========================================================================
    //=========================================================================
    // Get an instance of this object
    //=========================================================================
    //=========================================================================
    public static function Instance($args=[])
    {
        if (is_scalar($args)) {
            $args = ['id' => $args];
        }
        if ($args) {
            return new static($args);
        }
    }

    //=========================================================================
    //=========================================================================
    // Is the Instance Valid
    //=========================================================================
    //=========================================================================
    public function IsValid()
    {
        return $this->is_valid;
    }

    //=========================================================================
    //=========================================================================
    // Check if Instance is Valid
    //=========================================================================
    //=========================================================================
    public function CheckIsValid($msg='')
    {
        if ($msg == '') {
            $msg = 'Invalid accessor instance.';
        }
        if (!$this->is_valid) {
            throw new \Exception($msg);
        }
        return true;
    }

    //=========================================================================
    //=========================================================================
    // Get Data
    //=========================================================================
    //=========================================================================
    public function GetData()
    {
        return $this->data;
    }
}
