<?php
//*****************************************************************************
//*****************************************************************************
/**
 * Batch Job Class
 *
 * @package         phpOpenFW
 * @author          Christian J. Clark
 * @copyright       Copyright (c) Christian J. Clark
 * @license         https://mit-license.org
 **/
//*****************************************************************************
//*****************************************************************************

namespace phpOpenFW\CLI;

//*****************************************************************************
/**
 * BatchJob Class
 */
//*****************************************************************************
class BatchJob extends CLI
{
    //*************************************************************************
    //*************************************************************************
    // Class Members
    //*************************************************************************
    //*************************************************************************

    //*************************************************************************
    //*************************************************************************
    // Run Batch Job
    //*************************************************************************
    //*************************************************************************
    public function Run()
    {
        //=============================================================
        // Extract Arguments
        //=============================================================
        extract($this->args , EXTR_PREFIX_ALL, 'arg');

        //=============================================================
        // Check Parameters
        //=============================================================
        if (empty($this->args['j'])) {
            self::PrintErrorExit('No job specified (Use -j option).');
        }
        else {
            $mod_title = $this->args['j'];
            $this->mod_title = $mod_title;
        }

        //====================================================================
        // Include Job
        //====================================================================
        $job = (isset($this->args['j'])) ? ($this->args['j']) : (false);
        $job_dir = "{$this->app_path}/controllers/{$job}";
        if ($job && is_dir($job_dir)) {

            //=============================================================
            // Job Controller
            //=============================================================
            $job_controller = "{$job_dir}/controller.php";
            if (!file_exists($job_controller)) {
                self::PrintErrorExit('Unable to find job controller.');
            }
        
            //=============================================================
            // Job local.inc.php
            //=============================================================
            $job_local = "{$job_dir}/local.var.php";
            if (file_exists($job_local)) {
                include($job_local);
                if (!empty($mod_title)) {
                    $this->mod_title = $mod_title;
                }
            }

            //=============================================================
            // Job Title
            //=============================================================
            $this->PrintTitle($mod_title);

            //=============================================================
            // Batch Job Pre-Script File
            //=============================================================
            $pre_script = "{$this->app_path}/pre_batch.inc.php";
            if (file_exists($pre_script)) { include($pre_script); }

            //=============================================================
            // Environment
            //=============================================================
            $this->SetEnv();
        
            //=============================================================
            // Run Mode
            //=============================================================
            $run_mode = false;
            if (isset($this->args['run_mode'])) {
                $run_mode = $this->args['run_mode'];
                define('RUN_MODE', $run_mode);
                $tmp_msg = "Run Mode is '{$run_mode}'";
                self::PrintMessage($tmp_msg, 0, '*');
            }
            define('RUN_MODE', $run_mode);

            //=============================================================
            // Verbose
            //=============================================================
            $verbose = (isset($this->args['v'])) ? (true) : (false);
            define('VERBOSE', $verbose);
            if ($verbose) {
                $tmp_msg = "Verbose output is ON";
                self::PrintMessage($tmp_msg, 0, '*');
            }
        
            //=============================================================
            // Call Controller
            //=============================================================
            $this->PrintOutputHeader();
            include($job_controller);
        
            //=============================================================
            // Batch Job Post-Script File
            //=============================================================
            $post_script = "{$this->app_path}/post_batch.inc.php";
            if (file_exists($post_script)) { include($post_script); }
        
        }
        else {
            self::PrintErrorExit('Invalid job.');
        }        
    }

}
