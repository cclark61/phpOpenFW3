<?php
//*****************************************************************************
//*****************************************************************************
/**
 * Data URI Scheme Class
 *
 * @package         phpopenfw/phpopenfw3
 * @author          Christian J. Clark
 * @copyright       Copyright (c) Christian J. Clark
 * @website         https://phpopenfw.org
 * @license         https://mit-license.org
 **/
//*****************************************************************************
//*****************************************************************************

namespace phpOpenFW\Data;

//*****************************************************************************
/**
 * URI scheme Class
 */
//*****************************************************************************
class UriScheme
{
    //*************************************************************************
    //*************************************************************************
    // Parse Data URI Scheme Header
    //*************************************************************************
    // See: https://en.wikipedia.org/wiki/Data_URI_scheme
    //*************************************************************************
    //*************************************************************************
    public static function ParseHeader($chunk)
    {
        //---------------------------------------------------------------------
        // Is there data to work with?
        //---------------------------------------------------------------------
        if ($chunk) {

            //-----------------------------------------------------------------
            // Start Return Values
            //-----------------------------------------------------------------
            $ret_vals = [
                'embedded_headers' => false
            ];

            //-----------------------------------------------------------------
            // Determine a lot of things...
            //-----------------------------------------------------------------
            $ret_vals['has_binary'] = !ctype_print($chunk);
            $embedded_headers = (bool)(stripos($chunk, 'data:') !== false);
            if ($embedded_headers) {
                $header_end = stripos($chunk, ',');
                $header = substr($chunk, 5, $header_end - 5);
                $is_base64 = (bool)(stripos($chunk, 'base64'));
                $chunk = substr($chunk, $header_end + 1);

                //-------------------------------------------------------------
                // Return Values
                //-------------------------------------------------------------
                $ret_vals['embedded_headers'] = $embedded_headers;
                $ret_vals['header'] = $header;
                $ret_vals['is_base64'] = $is_base64;
                $ret_vals['chunk'] = $chunk;
                $ret_vals['content_type'] = substr($header, 0, stripos($header, ';'));
            }

            //-----------------------------------------------------------------
            // Return Parsed Data
            //-----------------------------------------------------------------
            return $ret_vals;
        }

        //---------------------------------------------------------------------
        // Invalid Data Chunk
        //---------------------------------------------------------------------
        return false;
    }
}