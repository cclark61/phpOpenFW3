<?php
//*****************************************************************************
//*****************************************************************************
/**
 * HTTP Request Class
 *
 * @package         phpopenfw/phpopenfw3
 * @author          Christian J. Clark
 * @copyright       Copyright (c) Christian J. Clark
 * @website         https://phpopenfw.org
 * @license         https://mit-license.org
 **/
//*****************************************************************************
//*****************************************************************************

namespace phpOpenFW\HTTP;

//*****************************************************************************
/**
 * Request Class
 */
//*****************************************************************************
class Request
{
    //*************************************************************************
    //*************************************************************************
    // Get Request Ranges
    //*************************************************************************
    //*************************************************************************
    public static function GetRequestRanges(Array $args=[])
    {
        //---------------------------------------------------------------------
        // Check for Range
        //---------------------------------------------------------------------
        if (empty($_SERVER['HTTP_RANGE'])) {
            return false;
        }

        //---------------------------------------------------------------------
        // Get Range Parts
        //---------------------------------------------------------------------
        $range_parts = explode('=', $_SERVER['HTTP_RANGE']);
        if (count($range_parts) != 2) {
            return false;
        }

        //---------------------------------------------------------------------
        // Validate Units
        //---------------------------------------------------------------------
        if ($range_parts[0] != 'bytes') {
            return false;
        }

        //---------------------------------------------------------------------
        // Get list of ranges
        //---------------------------------------------------------------------
        $raw_ranges = explode(',', $range_parts[1]);
        if (!$raw_ranges) {
            return false;
        }
        $raw_ranges = array_map('trim', $raw_ranges);

        //---------------------------------------------------------------------
        // Determine Stream Size
        //---------------------------------------------------------------------
        $file_size = (!empty($args['file_size'])) ? ($args['file_size']) : (false);
        if (!$file_size) {
            $file_size = (!empty($args['size'])) ? ($args['size']) : (false);
        }

        //---------------------------------------------------------------------
        // Process Each Range
        //---------------------------------------------------------------------
        $ranges = [];
        foreach ($raw_ranges as $raw_range) {
            $read_to_end = false;
            $range_parts = explode('-', $raw_range);
            if (!is_array($range_parts) || !$range_parts) {
                continue;
            }
            $range_parts = array_map('trim', $range_parts);

            //-----------------------------------------------------------------
            // Range Start
            //-----------------------------------------------------------------
            if (!is_numeric($range_parts[0])) {
                $range_start = 0;
            }
            else {
                $range_start = $range_parts[0];
            }

            //-----------------------------------------------------------------
            // Range End
            //-----------------------------------------------------------------
            if (empty($range_parts[1]) || !is_numeric($range_parts[1])) {
                $range_end = false;
            }
            else {
                if ($file_size && $range_parts[1] > $file_size) {
                    $range_end = $file_size;
                    $read_to_end = true;
                }
                else {
                    $range_end = $range_parts[1];
                    if ($file_size && $range_parts[1] == $file_size) {
                        $read_to_end = true;
                    }
                }
            }

            //-----------------------------------------------------------------
            // Check if range is "all" (i.e. "0-")
            //-----------------------------------------------------------------
            if (!$range_start && (!$range_end || $read_to_end)) {
                continue;
            }

            //-----------------------------------------------------------------
            // Add Range
            //-----------------------------------------------------------------
            $ranges[] = [$range_start, $range_end];
        }

        //---------------------------------------------------------------------
        // Return Ranges
        //---------------------------------------------------------------------
        return $ranges;
    }
}
