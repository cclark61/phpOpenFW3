<?php
//******************************************************************************
//******************************************************************************
/**
 * Error Handling Trait
 *
 * @package         phpOpenFW
 * @author          Christian J. Clark
 * @copyright       Copyright (c) Christian J. Clark
 * @license         https://mit-license.org
 **/
//******************************************************************************
//******************************************************************************

namespace phpOpenFW\Traits;

//******************************************************************************
/**
 * Error Handling Trait
 */
//******************************************************************************
trait ErrorHandling
{
    //==========================================================================
    // Trait Memebers
    //==========================================================================
    protected $error_handling = 'error';
    protected $error_type = E_USER_ERROR;

    //==========================================================================
    //==========================================================================
    // Set Error Handling
    //==========================================================================
    //==========================================================================
    protected function SetErrorHandling($type)
    {
        if (!$type || !is_scalar($type)) {
            return false;
        }
        $type = strtolower($type);
        if (in_array($type, ['error', 'exception'])) {
            $this->error_handling = $type;
            return true;
        }
        return false;
    }

    //==========================================================================
    //==========================================================================
    // Error
    //==========================================================================
    //==========================================================================
    protected function Error($error, $file, $line)
    {
        $error .= " ({$file} on line {$line})";
        $this->DisplayError($error);
    }

    //==========================================================================
    //==========================================================================
    // Display Error
    //==========================================================================
    //==========================================================================
    protected function DisplayError($error)
    {
        if ($this->error_handling == 'error') {
            trigger_error($error, $this->error_type);
        }
        else {
            throw new \Exception($error);
        }
    }

}
